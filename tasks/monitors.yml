---
- include_vars: debian.yml
  when:  ansible_os_family == "Debian"
  tags: monit_monitors_item

- include_vars: redhat.yml
  when: ansible_os_family == "RedHat"
  tags: monit_monitors_item

- name: monitors - Write monitors
  template:
    src: monitor.j2
    dest: "{{ monit_includes }}/{{ item.name }}"
    owner: root
    group: root
  with_items: "{{ monit_services }}"
  notify: restart monit
  tags: monit_monitors_item

- name: monitors - Copy program
  copy:
    src: "files/{{ item }}"
    dest: "{{ monit_scripts_folder }}/"
    mode: 0755
  with_items: monit_services_program_name
  when: monit_services_program_name is defined

- name: monitors - Create facts directory
  file:
    path: "/etc/ansible/facts.d"
    mode: 0755
    state: directory

- name: monitors - Registers configured monitors
  template:
    src: "monit.fact.j2"
    dest: "/etc/ansible/facts.d/monit.fact"
    mode: 0644
  register: monit_write_facts

- name: monitors - Reload facts
  setup:
    filter: "ansible_local"
  when: monit_write_facts.changed

- name: monitors - List configured monitors
  command: ls -1 {{ monit_includes }}
  register: monit_services_present
  changed_when: false

- name: monitors - Remove unused monitors
  file:
    path: "{{ monit_includes }}/{{ item }}"
    state: absent
  with_items: monit_services_present.stdout_lines
  when: monit_service_delete_unlisted and item|basename not in ansible_local.monit.monit_configured_services
  notify: restart monit
